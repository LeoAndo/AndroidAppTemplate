plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}
def localProperties = new Properties()
try {
    localProperties.load(new FileInputStream(rootProject.file("local.properties")))
} catch (Exception e) {
    logger.warn("Not Found local.properties: ${e.localizedMessage}")
}
android {
    namespace 'com.leoleo.androidapptemplate'
    compileSdk 34

    defaultConfig {
        applicationId "com.leoleo.androidapptemplate"
        minSdk 29
        targetSdk 34
        versionCode 100
        versionName "1.0.0"

        testInstrumentationRunner "com.leoleo.androidapptemplate.CustomTestRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        debug { storeFile rootProject.file('debug.keystore') }
        release {
            storeFile rootProject.file('release.keystore')
            storePassword localProperties['ANDROID_STORE_PASSWORD']
            keyAlias localProperties['ANDROID_KEY_ALIAS']
            keyPassword localProperties['ANDROID_KEY_PASSWORD']
        }
    }

    buildTypes {
        debug { signingConfig signingConfigs.debug }
        release {
            // ローカル環境では署名なしのrelease ビルドも可能とする
            if (rootProject.file('release.keystore').exists() &&
                    localProperties['ANDROID_STORE_PASSWORD'] != null &&
                    localProperties['ANDROID_KEY_ALIAS'] != null &&
                    localProperties['ANDROID_KEY_PASSWORD'] != null
            ) {
                logger.warn("Use signingConfigs.release")
                signingConfig signingConfigs.release
            } else {
                logger.warn("Not Use signingConfigs.release")
            }
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        // Kotlin Versionとの互換性マップ
        // https://developer.android.com/jetpack/androidx/releases/compose-kotlin
        kotlinCompilerExtensionVersion '1.4.3'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    flavorDimensions "version"
    productFlavors {
        development {
            dimension "version"
            applicationIdSuffix ".development"
            versionNameSuffix "-development"
        }
        stub {
            dimension "version"
            applicationIdSuffix ".stub"
            versionNameSuffix "-stub"
        }
        staging {
            dimension "version"
            applicationIdSuffix ".staging"
            versionNameSuffix "-staging"
        }
        production {
            dimension "version"
        }
    }
}

dependencies {
    implementation project(':domain')
    implementation project(':data') // DIで必要

    // compose Bomを利用
    def compose_version = platform('androidx.compose:compose-bom:2023.06.01')
    implementation compose_version
    androidTestImplementation compose_version
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    testImplementation("junit:junit:$junit_version")
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version")

    // DI
    implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-compiler:$dagger_hilt_version"
    // DI: test
    androidTestImplementation "com.google.dagger:hilt-android-testing:$dagger_hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$dagger_hilt_version"

    // Compose: Navigation
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    implementation "androidx.navigation:navigation-compose:2.6.0"

    // Image
    implementation 'io.coil-kt:coil-compose:2.4.0'

    // Paging
    implementation "androidx.paging:paging-compose:3.2.0"

    // responsive UI for larger screens
    implementation 'androidx.compose.material3:material3-window-size-class'
}
